// Mocks generated by Mockito 5.4.4 from annotations
// in dima_project/test/mocks/mock_shared_preferences_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:dima_project/utils/shared_preferences_helper.dart' as _i2;
import 'package:firebase_messaging/firebase_messaging.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SharedPreferencesHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferencesHelper extends _i1.Mock
    implements _i2.SharedPreferencesHelper {
  MockSharedPreferencesHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveNotification(_i4.RemoteMessage? message) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveNotification,
          [message],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<String?> getNotificationType() => (super.noSuchMethod(
        Invocation.method(
          #getNotificationType,
          [],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<String?> getNotificationData() => (super.noSuchMethod(
        Invocation.method(
          #getNotificationData,
          [],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<void> clearNotification() => (super.noSuchMethod(
        Invocation.method(
          #clearNotification,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
