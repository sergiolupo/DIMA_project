// Mocks generated by Mockito 5.4.4 from annotations
// in dima_project/test/mocks/mock_database_service.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:typed_data' as _i9;

import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:dima_project/models/event.dart' as _i6;
import 'package:dima_project/models/group.dart' as _i4;
import 'package:dima_project/models/message.dart' as _i10;
import 'package:dima_project/models/private_chat.dart' as _i5;
import 'package:dima_project/models/user.dart' as _i3;
import 'package:dima_project/services/database_service.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCollectionReference_0<T extends Object?> extends _i1.SmartFake
    implements _i2.CollectionReference<T> {
  _FakeCollectionReference_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserData_1 extends _i1.SmartFake implements _i3.UserData {
  _FakeUserData_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGroup_2 extends _i1.SmartFake implements _i4.Group {
  _FakeGroup_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePrivateChat_3 extends _i1.SmartFake implements _i5.PrivateChat {
  _FakePrivateChat_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDocumentSnapshot_4<T extends Object?> extends _i1.SmartFake
    implements _i2.DocumentSnapshot<T> {
  _FakeDocumentSnapshot_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEvent_5 extends _i1.SmartFake implements _i6.Event {
  _FakeEvent_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i7.DatabaseService {
  MockDatabaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CollectionReference<Object?> get groupsRef => (super.noSuchMethod(
        Invocation.getter(#groupsRef),
        returnValue: _FakeCollectionReference_0<Object?>(
          this,
          Invocation.getter(#groupsRef),
        ),
      ) as _i2.CollectionReference<Object?>);

  @override
  set groupsRef(_i2.CollectionReference<Object?>? _groupsRef) =>
      super.noSuchMethod(
        Invocation.setter(
          #groupsRef,
          _groupsRef,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.CollectionReference<Object?> get usersRef => (super.noSuchMethod(
        Invocation.getter(#usersRef),
        returnValue: _FakeCollectionReference_0<Object?>(
          this,
          Invocation.getter(#usersRef),
        ),
      ) as _i2.CollectionReference<Object?>);

  @override
  set usersRef(_i2.CollectionReference<Object?>? _usersRef) =>
      super.noSuchMethod(
        Invocation.setter(
          #usersRef,
          _usersRef,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.CollectionReference<Object?> get followersRef => (super.noSuchMethod(
        Invocation.getter(#followersRef),
        returnValue: _FakeCollectionReference_0<Object?>(
          this,
          Invocation.getter(#followersRef),
        ),
      ) as _i2.CollectionReference<Object?>);

  @override
  set followersRef(_i2.CollectionReference<Object?>? _followersRef) =>
      super.noSuchMethod(
        Invocation.setter(
          #followersRef,
          _followersRef,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.CollectionReference<Object?> get privateChatRef => (super.noSuchMethod(
        Invocation.getter(#privateChatRef),
        returnValue: _FakeCollectionReference_0<Object?>(
          this,
          Invocation.getter(#privateChatRef),
        ),
      ) as _i2.CollectionReference<Object?>);

  @override
  set privateChatRef(_i2.CollectionReference<Object?>? _privateChatRef) =>
      super.noSuchMethod(
        Invocation.setter(
          #privateChatRef,
          _privateChatRef,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.CollectionReference<Object?> get eventsRef => (super.noSuchMethod(
        Invocation.getter(#eventsRef),
        returnValue: _FakeCollectionReference_0<Object?>(
          this,
          Invocation.getter(#eventsRef),
        ),
      ) as _i2.CollectionReference<Object?>);

  @override
  set eventsRef(_i2.CollectionReference<Object?>? _eventsRef) =>
      super.noSuchMethod(
        Invocation.setter(
          #eventsRef,
          _eventsRef,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<void> registerUserWithUUID(
    _i3.UserData? user,
    String? uuid,
    _i9.Uint8List? imagePath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerUserWithUUID,
          [
            user,
            uuid,
            imagePath,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> updateToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #updateToken,
          [token],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> updateUserInformation(
    _i3.UserData? user,
    _i9.Uint8List? imagePath,
    bool? imageHasChanged,
    bool? visibilityHasChange,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserInformation,
          [
            user,
            imagePath,
            imageHasChanged,
            visibilityHasChange,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i3.UserData> getUserData(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #getUserData,
          [uid],
        ),
        returnValue: _i8.Future<_i3.UserData>.value(_FakeUserData_1(
          this,
          Invocation.method(
            #getUserData,
            [uid],
          ),
        )),
      ) as _i8.Future<_i3.UserData>);

  @override
  _i8.Stream<_i2.DocumentSnapshot<Object?>> getUserDataFromUID(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserDataFromUID,
          [uid],
        ),
        returnValue: _i8.Stream<_i2.DocumentSnapshot<Object?>>.empty(),
      ) as _i8.Stream<_i2.DocumentSnapshot<Object?>>);

  @override
  _i8.Stream<_i4.Group> getGroupFromIdStream(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getGroupFromIdStream,
          [id],
        ),
        returnValue: _i8.Stream<_i4.Group>.empty(),
      ) as _i8.Stream<_i4.Group>);

  @override
  _i8.Future<_i4.Group> getGroupFromId(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getGroupFromId,
          [id],
        ),
        returnValue: _i8.Future<_i4.Group>.value(_FakeGroup_2(
          this,
          Invocation.method(
            #getGroupFromId,
            [id],
          ),
        )),
      ) as _i8.Future<_i4.Group>);

  @override
  _i8.Future<_i3.UserData> getUserDataFromUsername(String? username) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserDataFromUsername,
          [username],
        ),
        returnValue: _i8.Future<_i3.UserData>.value(_FakeUserData_1(
          this,
          Invocation.method(
            #getUserDataFromUsername,
            [username],
          ),
        )),
      ) as _i8.Future<_i3.UserData>);

  @override
  _i8.Future<bool> checkUserExist(String? email) => (super.noSuchMethod(
        Invocation.method(
          #checkUserExist,
          [email],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<void> createGroup(
    _i4.Group? group,
    _i9.Uint8List? imagePath,
    List<String>? uuids,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createGroup,
          [
            group,
            imagePath,
            uuids,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Stream<List<_i10.Message>> getChats(String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChats,
          [groupId],
        ),
        returnValue: _i8.Stream<List<_i10.Message>>.empty(),
      ) as _i8.Stream<List<_i10.Message>>);

  @override
  _i8.Stream<List<dynamic>> getGroupMembers(String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupMembers,
          [groupId],
        ),
        returnValue: _i8.Stream<List<dynamic>>.empty(),
      ) as _i8.Stream<List<dynamic>>);

  @override
  _i8.Stream<List<_i2.QueryDocumentSnapshot<Object?>>> searchByGroupNameStream(
          String? searchText) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchByGroupNameStream,
          [searchText],
        ),
        returnValue:
            _i8.Stream<List<_i2.QueryDocumentSnapshot<Object?>>>.empty(),
      ) as _i8.Stream<List<_i2.QueryDocumentSnapshot<Object?>>>);

  @override
  _i8.Stream<List<_i2.QueryDocumentSnapshot<Object?>>> searchByUsernameStream(
          String? searchText) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchByUsernameStream,
          [searchText],
        ),
        returnValue:
            _i8.Stream<List<_i2.QueryDocumentSnapshot<Object?>>>.empty(),
      ) as _i8.Stream<List<_i2.QueryDocumentSnapshot<Object?>>>);

  @override
  _i8.Future<void> deleteUserGroupRequests(String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUserGroupRequests,
          [groupId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteFollowRequests() => (super.noSuchMethod(
        Invocation.method(
          #deleteFollowRequests,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteGroupRequests(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #deleteGroupRequests,
          [uid],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> toggleGroupJoin(String? groupId) => (super.noSuchMethod(
        Invocation.method(
          #toggleGroupJoin,
          [groupId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> sendMessage(
    String? id,
    _i10.Message? message,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [
            id,
            message,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i5.PrivateChat> getPrivateChatsFromMember(
          List<String>? members) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPrivateChatsFromMember,
          [members],
        ),
        returnValue: _i8.Future<_i5.PrivateChat>.value(_FakePrivateChat_3(
          this,
          Invocation.method(
            #getPrivateChatsFromMember,
            [members],
          ),
        )),
      ) as _i8.Future<_i5.PrivateChat>);

  @override
  _i8.Stream<String?> getPrivateChatIdFromMembers(List<String>? members) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPrivateChatIdFromMembers,
          [members],
        ),
        returnValue: _i8.Stream<String?>.empty(),
      ) as _i8.Stream<String?>);

  @override
  _i8.Future<dynamic> sendFirstPrivateMessage(
    _i10.Message? message,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendFirstPrivateMessage,
          [
            message,
            id,
          ],
        ),
        returnValue: _i8.Future<dynamic>.value(),
      ) as _i8.Future<dynamic>);

  @override
  _i8.Future<String> createPrivateChat(_i5.PrivateChat? privateChat) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPrivateChat,
          [privateChat],
        ),
        returnValue: _i8.Future<String>.value(_i11.dummyValue<String>(
          this,
          Invocation.method(
            #createPrivateChat,
            [privateChat],
          ),
        )),
      ) as _i8.Future<String>);

  @override
  _i8.Future<List<_i4.Group>> getGroups(String? uuid) => (super.noSuchMethod(
        Invocation.method(
          #getGroups,
          [uuid],
        ),
        returnValue: _i8.Future<List<_i4.Group>>.value(<_i4.Group>[]),
      ) as _i8.Future<List<_i4.Group>>);

  @override
  _i8.Stream<List<_i4.Group>> getGroupsStream() => (super.noSuchMethod(
        Invocation.method(
          #getGroupsStream,
          [],
        ),
        returnValue: _i8.Stream<List<_i4.Group>>.empty(),
      ) as _i8.Stream<List<_i4.Group>>);

  @override
  _i8.Stream<List<_i5.PrivateChat>> getPrivateChatsStream() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPrivateChatsStream,
          [],
        ),
        returnValue: _i8.Stream<List<_i5.PrivateChat>>.empty(),
      ) as _i8.Stream<List<_i5.PrivateChat>>);

  @override
  _i8.Future<_i2.DocumentSnapshot<Object?>> getFollowersUser(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFollowersUser,
          [uuid],
        ),
        returnValue: _i8.Future<_i2.DocumentSnapshot<Object?>>.value(
            _FakeDocumentSnapshot_4<Object?>(
          this,
          Invocation.method(
            #getFollowersUser,
            [uuid],
          ),
        )),
      ) as _i8.Future<_i2.DocumentSnapshot<Object?>>);

  @override
  _i8.Stream<_i2.DocumentSnapshot<Map<String, dynamic>>> getMembersStreamUser(
    String? eventId,
    String? detailId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMembersStreamUser,
          [
            eventId,
            detailId,
          ],
        ),
        returnValue:
            _i8.Stream<_i2.DocumentSnapshot<Map<String, dynamic>>>.empty(),
      ) as _i8.Stream<_i2.DocumentSnapshot<Map<String, dynamic>>>);

  @override
  _i8.Future<bool> isUsernameTaken(String? username) => (super.noSuchMethod(
        Invocation.method(
          #isUsernameTaken,
          [username],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<void> toggleFollowUnfollow(
    String? user,
    String? visitor,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #toggleFollowUnfollow,
          [
            user,
            visitor,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Stream<List<_i10.Message>> getPrivateChats(String? privateChatId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPrivateChats,
          [privateChatId],
        ),
        returnValue: _i8.Stream<List<_i10.Message>>.empty(),
      ) as _i8.Stream<List<_i10.Message>>);

  @override
  _i8.Future<int> getUnreadMessages(
    bool? isGroup,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUnreadMessages,
          [
            isGroup,
            id,
          ],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<void> updateMessageReadStatus(_i10.Message? message) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMessageReadStatus,
          [message],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteMessage(_i10.Message? message) => (super.noSuchMethod(
        Invocation.method(
          #deleteMessage,
          [message],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> updateMessageContent(
    _i10.Message? message,
    String? updatedMessage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMessageContent,
          [
            message,
            updatedMessage,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<bool> isEmailTaken(String? email) => (super.noSuchMethod(
        Invocation.method(
          #isEmailTaken,
          [email],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Stream<List<dynamic>> getGroupRequestsStream(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupRequestsStream,
          [id],
        ),
        returnValue: _i8.Stream<List<dynamic>>.empty(),
      ) as _i8.Stream<List<dynamic>>);

  @override
  _i8.Future<List<_i3.UserData>> getGroupRequestsForGroup(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupRequestsForGroup,
          [id],
        ),
        returnValue: _i8.Future<List<_i3.UserData>>.value(<_i3.UserData>[]),
      ) as _i8.Future<List<_i3.UserData>>);

  @override
  _i8.Future<List<String>> getGroupRequests(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getGroupRequests,
          [id],
        ),
        returnValue: _i8.Future<List<String>>.value(<String>[]),
      ) as _i8.Future<List<String>>);

  @override
  _i8.Future<List<_i4.Group>> getUserGroupRequests(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserGroupRequests,
          [id],
        ),
        returnValue: _i8.Future<List<_i4.Group>>.value(<_i4.Group>[]),
      ) as _i8.Future<List<_i4.Group>>);

  @override
  _i8.Future<List<_i3.UserData>> getFollowRequests(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFollowRequests,
          [id],
        ),
        returnValue: _i8.Future<List<_i3.UserData>>.value(<_i3.UserData>[]),
      ) as _i8.Future<List<_i3.UserData>>);

  @override
  _i8.Future<Map<String, List<dynamic>>> getEventRequests(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEventRequests,
          [id],
        ),
        returnValue: _i8.Future<Map<String, List<dynamic>>>.value(
            <String, List<dynamic>>{}),
      ) as _i8.Future<Map<String, List<dynamic>>>);

  @override
  _i8.Future<void> denyGroupRequest(
    String? groupId,
    String? uuid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #denyGroupRequest,
          [
            groupId,
            uuid,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> acceptGroupRequest(
    String? groupId,
    String? uuid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #acceptGroupRequest,
          [
            groupId,
            uuid,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i10.Message>> getGroupMessagesType(
    String? id,
    _i10.Type? type,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupMessagesType,
          [
            id,
            type,
          ],
        ),
        returnValue: _i8.Future<List<_i10.Message>>.value(<_i10.Message>[]),
      ) as _i8.Future<List<_i10.Message>>);

  @override
  _i8.Future<List<_i10.Message>> getPrivateMessagesType(
    String? id,
    _i10.Type? type,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPrivateMessagesType,
          [
            id,
            type,
          ],
        ),
        returnValue: _i8.Future<List<_i10.Message>>.value(<_i10.Message>[]),
      ) as _i8.Future<List<_i10.Message>>);

  @override
  _i8.Future<void> acceptUserRequest(String? user) => (super.noSuchMethod(
        Invocation.method(
          #acceptUserRequest,
          [user],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> denyUserRequest(String? user) => (super.noSuchMethod(
        Invocation.method(
          #denyUserRequest,
          [user],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> denyEventRequest(
    String? eventId,
    String? detailId,
    String? uuid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #denyEventRequest,
          [
            eventId,
            detailId,
            uuid,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> acceptEventRequest(
    String? eventId,
    String? detailId,
    String? uid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #acceptEventRequest,
          [
            eventId,
            detailId,
            uid,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> denyUserGroupRequest(String? groupId) => (super.noSuchMethod(
        Invocation.method(
          #denyUserGroupRequest,
          [groupId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> acceptUserGroupRequest(String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #acceptUserGroupRequest,
          [groupId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> createEvent(
    _i6.Event? event,
    _i9.Uint8List? imagePath,
    List<String>? uuids,
    List<String>? groupIds,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createEvent,
          [
            event,
            imagePath,
            uuids,
            groupIds,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> sendEventsOnGroups(
    String? eventId,
    List<String>? groupIds,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEventsOnGroups,
          [
            eventId,
            groupIds,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> sendEventsOnPrivateChat(
    String? eventId,
    List<String>? uuids,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEventsOnPrivateChat,
          [
            eventId,
            uuids,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Stream<List<_i2.QueryDocumentSnapshot<Object?>>> searchByEventNameStream(
          String? searchText) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchByEventNameStream,
          [searchText],
        ),
        returnValue:
            _i8.Stream<List<_i2.QueryDocumentSnapshot<Object?>>>.empty(),
      ) as _i8.Stream<List<_i2.QueryDocumentSnapshot<Object?>>>);

  @override
  _i8.Future<void> toggleEventJoin(
    String? eventId,
    String? detailId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #toggleEventJoin,
          [
            eventId,
            detailId,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Stream<_i6.Event> getEventStream(String? eventId) => (super.noSuchMethod(
        Invocation.method(
          #getEventStream,
          [eventId],
        ),
        returnValue: _i8.Stream<_i6.Event>.empty(),
      ) as _i8.Stream<_i6.Event>);

  @override
  _i8.Future<List<_i6.Event>> getCreatedEvents(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCreatedEvents,
          [uuid],
        ),
        returnValue: _i8.Future<List<_i6.Event>>.value(<_i6.Event>[]),
      ) as _i8.Future<List<_i6.Event>>);

  @override
  _i8.Future<List<_i6.Event>> getJoinedEvents(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getJoinedEvents,
          [uuid],
        ),
        returnValue: _i8.Future<List<_i6.Event>>.value(<_i6.Event>[]),
      ) as _i8.Future<List<_i6.Event>>);

  @override
  _i8.Future<dynamic> shareNewsOnGroups(
    String? title,
    String? description,
    String? imageUrl,
    String? blogUrl,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #shareNewsOnGroups,
          [
            title,
            description,
            imageUrl,
            blogUrl,
            id,
          ],
        ),
        returnValue: _i8.Future<dynamic>.value(),
      ) as _i8.Future<dynamic>);

  @override
  _i8.Future<dynamic> shareNewsOnFollower(
    String? title,
    String? description,
    String? imageUrl,
    String? blogUrl,
    String? uid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #shareNewsOnFollower,
          [
            title,
            description,
            imageUrl,
            blogUrl,
            uid,
          ],
        ),
        returnValue: _i8.Future<dynamic>.value(),
      ) as _i8.Future<dynamic>);

  @override
  _i8.Future<void> updateEvent(
    _i6.Event? event,
    _i9.Uint8List? uint8list,
    bool? sameImage,
    bool? visibilityHasChanged,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateEvent,
          [
            event,
            uint8list,
            sameImage,
            visibilityHasChanged,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i6.Event> getEvent(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getEvent,
          [id],
        ),
        returnValue: _i8.Future<_i6.Event>.value(_FakeEvent_5(
          this,
          Invocation.method(
            #getEvent,
            [id],
          ),
        )),
      ) as _i8.Future<_i6.Event>);

  @override
  dynamic updateGroup(
    _i4.Group? group,
    _i9.Uint8List? uint8list,
    bool? sameImage,
    bool? visibilityHasChanged,
    List<String>? uuids,
  ) =>
      super.noSuchMethod(Invocation.method(
        #updateGroup,
        [
          group,
          uint8list,
          sameImage,
          visibilityHasChanged,
          uuids,
        ],
      ));

  @override
  _i8.Future<void> inviteUserToGroup(
    String? groupId,
    List<String>? uids,
    List<dynamic>? members,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #inviteUserToGroup,
          [
            groupId,
            uids,
            members,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deletePrivateChat(_i5.PrivateChat? chat) =>
      (super.noSuchMethod(
        Invocation.method(
          #deletePrivateChat,
          [chat],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteDetail(
    String? eventId,
    String? detailId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteDetail,
          [
            eventId,
            detailId,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteEvent(String? eventId) => (super.noSuchMethod(
        Invocation.method(
          #deleteEvent,
          [eventId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteUser() => (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<String> getDeviceTokenPrivateChat(_i5.PrivateChat? chat) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDeviceTokenPrivateChat,
          [chat],
        ),
        returnValue: _i8.Future<String>.value(_i11.dummyValue<String>(
          this,
          Invocation.method(
            #getDeviceTokenPrivateChat,
            [chat],
          ),
        )),
      ) as _i8.Future<String>);

  @override
  _i8.Future<List<String>> getDevicesTokensGroup(String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDevicesTokensGroup,
          [groupId],
        ),
        returnValue: _i8.Future<List<String>>.value(<String>[]),
      ) as _i8.Future<List<String>>);

  @override
  _i8.Future<List<String>> getDevicesTokensDetail(
    String? eventId,
    String? detailId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDevicesTokensDetail,
          [
            eventId,
            detailId,
          ],
        ),
        returnValue: _i8.Future<List<String>>.value(<String>[]),
      ) as _i8.Future<List<String>>);

  @override
  _i8.Future<List<String>> getDevicesTokensEvent(String? eventId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDevicesTokensEvent,
          [eventId],
        ),
        returnValue: _i8.Future<List<String>>.value(<String>[]),
      ) as _i8.Future<List<String>>);

  @override
  _i8.Stream<List<dynamic>> getFollowingsStream(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFollowingsStream,
          [uuid],
        ),
        returnValue: _i8.Stream<List<dynamic>>.empty(),
      ) as _i8.Stream<List<dynamic>>);

  @override
  _i8.Future<void> updateNotification(
    String? id,
    bool? notify,
    bool? isGroup,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateNotification,
          [
            id,
            notify,
            isGroup,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<bool> getNotification(
    String? id,
    bool? isGroup,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotification,
          [
            id,
            isGroup,
          ],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);
}
